on:
  push:
    branches:
      - main

jobs:
  connect_with_ssh:
    runs-on: self-hosted
    steps:
      - name: Debug secrets
        run: |
          echo "SSH_USER: ${{ secrets.SSH_USER }}"
          echo "SSH_HOST: ${{ secrets.SSH_HOST }} test"
          echo "SSH_PASSWORD (first 100 chars): $(echo "${{ secrets.SSH_PASSWORD }}" | cut -c1-100)"

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass  # Install sshpass if not available

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Connect
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          echo "SSH connection finished!"

  building:
    runs-on: self-hosted
    needs: connect_with_ssh
    steps:
      - name: Pull & build
        run: |
          cd ~/CrowdedRegionControl && git pull
          cd ~/CrowdedRegionControl/CrowdedBackend/CrowdedBackend && dotnet build && dotnet ef database update --verbose

  deploy:
    runs-on: self-hosted
    needs: [connect_with_ssh, building]
    steps:
      - name: deploy
        run: nohup dotnet ~/CrowdedBackend/CrowdedBackend.dll --urls "http://0.0.0.0:5725" > ~/app.log 2>&1 &