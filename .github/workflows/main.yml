on:
  push:
    branches:
      - main

jobs:
  connect_with_ssh:
    runs-on: self-hosted
    steps:
      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass  # Install sshpass if not available

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Connect
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          echo "SSH connection finished!"

  building:
    runs-on: self-hosted
    needs: connect_with_ssh
    steps:
      - name: Pull & build
        run: |
          cd ~/CrowdedRegionControl && git pull
          cd ~/CrowdedRegionControl/CrowdedBackend/CrowdedBackend
          
          dotnet build

          echo "Checking for pending migrations..."
          APPLIED=$(dotnet ef migrations list | grep '\[x\]' | wc -l)
          TOTAL=$(dotnet ef migrations list | wc -l)

          echo "Applied migrations: $APPLIED"
          echo "Total migrations: $TOTAL"

          if [ "$APPLIED" -lt "$TOTAL" ]; then
            echo "Applying pending migrations..."
            dotnet ef database update --verbose
          else
            echo "No pending migrations to apply."
          fi
          
  deploy:
    runs-on: self-hosted
    needs: [connect_with_ssh, building]
    steps:
      - name: deploy
        run: |
          SESSION_NAME="crowdedRegion"

          screen -wipe

          if screen -list | grep -q "$SESSION_NAME"; then
           echo "Killing existing screen session: $SESSION_NAME"
           screen -S "$SESSION_NAME" -X quit
           sleep 1
          fi
          echo "testing"
          echo "Starting new screen session: $SESSION_NAME"
          screen -dmS "$SESSION_NAME" ~/runscript.sh